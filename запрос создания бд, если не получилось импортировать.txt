-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS library.authors
(
    a_id integer,
    authors character varying(50),
    PRIMARY KEY (a_id)
);

CREATE TABLE IF NOT EXISTS library.halls
(
    h_id integer,
    number_hall integer,
    l_id integer,
    PRIMARY KEY (h_id)
);

CREATE TABLE IF NOT EXISTS library.libraries
(
    l_id integer,
    name character varying(50),
    location character varying(50),
    PRIMARY KEY (l_id)
);

CREATE TABLE IF NOT EXISTS library.shelves
(
    sh_id integer,
    h_id integer,
    PRIMARY KEY (sh_id)
);

CREATE TABLE IF NOT EXISTS library.books
(
    b_id integer,
    b_name character varying(50),
    b_type character varying(50),
    genre character varying(50),
    quantity integer,
    a_id integer,
    sh_id integer,
    PRIMARY KEY (b_id)
);

CREATE TABLE IF NOT EXISTS library.library_workers
(
    lw_id integer,
    l_id integer,
    lw_fio character varying(50),
    PRIMARY KEY (lw_id)
);

CREATE TABLE IF NOT EXISTS library.decommissioned
(
    d_id integer,
    b_id integer,
    date_dec date,
    PRIMARY KEY (d_id)
);

CREATE TABLE IF NOT EXISTS library.extradition
(
    e_id integer,
    b_id integer,
    user_id integer,
    finish_date date,
    start_date date,
    lw_id integer,
    PRIMARY KEY (e_id)
);

CREATE TABLE IF NOT EXISTS library.users
(
    u_id integer,
    u_last_date date,
    id_library integer,
    u_fio character varying(50),
    u_type character varying(50),
    login character varying(50),
    password character varying(50),
    PRIMARY KEY (u_id)
);

CREATE TABLE IF NOT EXISTS library.pensioners
(
    pen_id integer,
    user_id integer,
    pen_certificate_number integer,
    PRIMARY KEY (pen_id)
);

CREATE TABLE IF NOT EXISTS library.peoples
(
    p_id integer,
    user_id integer,
    p_place character varying(50),
    PRIMARY KEY (p_id)
);

CREATE TABLE IF NOT EXISTS library.schools
(
    sc_id integer,
    user_id integer,
    school character varying,
    sc_class character varying,
    PRIMARY KEY (sc_id)
);

CREATE TABLE IF NOT EXISTS library.scientists
(
    sci_id integer,
    user_id integer,
    organization character varying(50),
    theme character varying(150),
    PRIMARY KEY (sci_id)
);

CREATE TABLE IF NOT EXISTS library.students
(
    s_id integer,
    user_id integer,
    s_university character varying(50),
    s_course integer,
    s_faculty character varying(50),
    PRIMARY KEY (s_id)
);

CREATE TABLE IF NOT EXISTS library.teachers
(
    t_id integer,
    user_id integer,
    t_university character varying(50),
    t_faculty character varying(50),
    t_rank character varying(50),
    PRIMARY KEY (t_id)
);

ALTER TABLE IF EXISTS library.halls
    ADD CONSTRAINT l_id FOREIGN KEY (l_id)
    REFERENCES library.libraries (l_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.shelves
    ADD CONSTRAINT h_id FOREIGN KEY (h_id)
    REFERENCES library.halls (h_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.books
    ADD CONSTRAINT a_id FOREIGN KEY (a_id)
    REFERENCES library.authors (a_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.books
    ADD CONSTRAINT sh_id FOREIGN KEY (sh_id)
    REFERENCES library.shelves (sh_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.library_workers
    ADD CONSTRAINT l_id FOREIGN KEY (l_id)
    REFERENCES library.libraries (l_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.decommissioned
    ADD CONSTRAINT b_id FOREIGN KEY (b_id)
    REFERENCES library.books (b_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.extradition
    ADD CONSTRAINT b_id FOREIGN KEY (b_id)
    REFERENCES library.books (b_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.extradition
    ADD CONSTRAINT lw_id FOREIGN KEY (lw_id)
    REFERENCES library.library_workers (lw_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.extradition
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES library.users (u_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.pensioners
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES library.users (u_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.peoples
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES library.users (u_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.schools
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES library.users (u_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.scientists
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES library.users (u_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.students
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES library.users (u_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS library.teachers
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES library.users (u_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;